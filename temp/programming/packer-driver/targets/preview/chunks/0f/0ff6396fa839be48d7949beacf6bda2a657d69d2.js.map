{"version":3,"sources":["file:///E:/Cocos/Project/ROYALTEENPATTI/assets/scripts/bases/Singleton.ts"],"names":["Singleton","constructor","GetInstance","c","instance","init","console","dir"],"mappings":";;;iBACaA,S;;;;;;;;;;;;;AADb;2BACaA,S,GAAN,MAAMA,SAAN,CAAmB;AAEtB;AACOC,QAAAA,WAAW,GAAG,CAAE;;AAEE,eAAXC,WAAW,CAAIC,CAAJ,EAAyB;AAC9C,cAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AACvB,iBAAKA,QAAL,GAAgB,IAAID,CAAJ,EAAhB;AACH;;AACD,iBAAO,KAAKC,QAAZ;AACH;;AAEMC,QAAAA,IAAI,GAAG;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AAdqB,O;;AAAbP,MAAAA,S,CACMI,Q,GAAgB,I","sourcesContent":["//Singleton.ts\r\nexport class Singleton<T> {\r\n    private static instance: any = null;\r\n    //资源管理者类的构造函数\r\n    public constructor() {}\r\n\r\n    public static GetInstance<T>(c: { new (): T }): T {\r\n        if (this.instance == null) {\r\n            this.instance = new c();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public init() {\r\n        console.dir(this);\r\n    }\r\n}\r\n"]}