{"version":3,"sources":["assets\\script\\util\\event\\EventMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { EventId } from \"../define\";\r\nimport Event from \"./Event\";\r\n\r\n\r\nexport default class EventMgr {\r\n    private eventMap: Map<EventId, Array<Event>> = new Map();\r\n    \r\n    private static instance: EventMgr;\r\n    public static get Instance() {\r\n        if (this.instance == null) {\r\n            this.instance = new EventMgr();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    public Register(eventId: EventId, callback: Function, scope: any = null) {\r\n        let event = new Event(eventId, callback, false, scope);\r\n        this.setEvent(eventId, event);\r\n    }\r\n\r\n    public Once(eventId: EventId, callback: Function, scope: any = null) {\r\n        let event = new Event(eventId, callback, true, scope);\r\n        this.setEvent(eventId, event);\r\n    }\r\n\r\n    public Emit(evId: EventId, ...args) {\r\n        if (!this.eventMap.has(evId)) {\r\n            return;\r\n        }\r\n        let evts = this.eventMap.get(evId);\r\n        if (evts.length) {\r\n            let newEvts = new Array<Event>();\r\n            for (let i = 0; i< evts.length; i++) {\r\n                let ev = evts[i];\r\n                ev.Call(...args);\r\n\r\n                if (!ev.Once) {\r\n                    newEvts.push(ev);\r\n                }\r\n            }\r\n            this.eventMap.set(evId, newEvts);\r\n        }\r\n    }\r\n\r\n    private setEvent(eventId: EventId, event: Event ) {\r\n        if (this.eventMap.has(eventId)) {\r\n            let evts = this.eventMap.get(eventId);\r\n            let finder = evts.findIndex((evt) => evt.Equel(event));\r\n            if (finder == -1) {\r\n                evts.push(event);\r\n                this.eventMap.set(eventId, evts);\r\n            } else {\r\n                evts.splice(finder, 1);\r\n                evts.push(event);\r\n                this.eventMap.set(eventId, evts);\r\n            }\r\n        } else {\r\n            let evts = new Array()\r\n            evts.push(event);\r\n            this.eventMap.set(eventId, evts);\r\n        }\r\n    }\r\n}"]}