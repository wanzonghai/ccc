{"version":3,"sources":["assets\\jumpStr\\JumpStr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property({tooltip: \"需要跳动的字符串\"})\n    str: String = \"\";\n\n    @property({type: cc.Float, tooltip: \"字符大小\"})\n    fontSize: number = 0;\n\n    @property({type: cc.Float, tooltip: \"单个字符跳动时间\"})\n    aniTime: number = 0;\n\n\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    start () {\n        let Layout = this.node.addComponent(cc.Layout);\n\n        Layout.type = cc.Layout.Type.HORIZONTAL;\n        Layout.resizeMode = cc.Layout.ResizeMode.CONTAINER;\n\n        for(let i: number = 0; i <this.str.length; i++) {\n            let str = this.str[i];\n            let labelNode = new cc.Node();\n            let label = labelNode.addComponent(cc.Label);\n\n            label.lineHeight = this.fontSize;\n            label.string = str;\n            label.fontSize = this.fontSize;\n            this.node.addChild(labelNode);\n        }\n\n        this.playStrJump();\n        this.schedule(() => {\n            this.playStrJump();\n        }, this.aniTime*this.str.length/2 + 1);\n    }\n\n    playStrJump() {\n        let jumpTime = this.aniTime/2;\n        let strIndex = 0;\n        let jumpStr = (labelNode: cc.Node) => {\n            cc.tween(labelNode)\n                .sequence(\n                    cc.tween().to(jumpTime, {y: this.fontSize/2}),\n                    cc.tween().to(jumpTime/4*3, {y: -this.fontSize/3}),\n                    cc.tween().to(jumpTime/4, {y: 0})\n                )\n                // .repeatForever()\n                .start();\n                \n\n            if(strIndex < this.node.children.length-1) { // 未到最后一个字符\n                strIndex++;\n                this.scheduleOnce(() => {\n                    jumpStr(this.node.children[strIndex]);\n                }, jumpTime/2);\n            }\n        }\n\n        jumpStr(this.node.children[strIndex]);\n\n    }\n\n    // update (dt) {}\n}\n"]}