{"version":3,"sources":["assets\\script\\ItemNode.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport DataManager from \"./DataManager\";\r\nimport { EventId, ItemType } from \"./util/define\";\r\nimport EventMgr from \"./util/event/EventMgr\";\r\nimport util from \"./util/util\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemNode extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgSp:cc.Sprite = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    imgSpArr:cc.SpriteFrame[] = []\r\n\r\n    //球类\r\n    public itemId:number = 0\r\n\r\n    private movingTime:number = 0\r\n\r\n    public itemIndex:number = -1\r\n\r\n\r\n    start () {\r\n\r\n    }\r\n    \r\n    /**初始化 */\r\n    public init(num: number,i:number){\r\n        this.itemId = num;\r\n        this.itemIndex = i\r\n        this.imgSp.spriteFrame = this.imgSpArr[num]\r\n        // this.moving(fishZone,startNode)\r\n    }\r\n    moving(fishZone:cc.Node,startNode:cc.Node){\r\n        let time = util.getRandom(1,3)\r\n        let pos = this.generateRandomPoint(fishZone)\r\n        let dir:number = 1\r\n        if(pos.x > this.node.x){\r\n            dir = -1\r\n        }else{\r\n            dir = 1\r\n        }\r\n        this.node.scaleX = dir\r\n        cc.tween(this.node)\r\n            .to(time,{position:pos})\r\n            .call(()=>{\r\n                this.movingTime +=1\r\n                if(this.movingTime < 3){\r\n                    this.moving(fishZone,startNode)\r\n                }else{\r\n                    this.GoingDestoy(startNode)\r\n                }\r\n            })\r\n            .start()\r\n    }\r\n    GoingDestoy(ovingNode:cc.Node){\r\n        cc.tween(this.node)\r\n        .to(1,{position:ovingNode.position})\r\n        .call(()=>{\r\n            this.node.destroy()\r\n        })\r\n        .start()\r\n    }\r\n\r\n    public generateRandomPoint(node:cc.Node){\r\n        let halfWidth = node.width/2 \r\n        let halfHeight = node.height/2\r\n        let x = util.getRandom(node.position.x - halfWidth,node.position.x + halfWidth + 1)\r\n        let y = util.getRandom(node.position.y - halfHeight,node.position.y + halfHeight + 1)\r\n        return cc.v3(x,y,0)\r\n    }\r\n\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n"]}